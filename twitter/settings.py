"""
Django settings for twitter project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "#)1r*u^)jds(z5=l7w^$62i45*bn013#lmz9b!i0=06u!$#58o"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # third party
    "rest_framework",
    "debug_toolbar",
    "django_filters",
    "notifications",
    # project apps
    "accounts",
    "core",
    "tweets",
    "friendships",
    "newsfeeds",
    "comments",
    "likes",
]

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
    "PAGE_SIZE": 10,
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

ROOT_URLCONF = "twitter.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "twitter.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "django",
        "USER": "django",
        "PASSWORD": "django",
        "HOST": "db",
        "PORT": 3306,
        "TEST": {
            "MIRROR": "default",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# set for toolbar and testmode for toolbar
INTERNAL_IPS = ["127.0.0.1"]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# store the js html files
STATIC_URL = "/static/"

# store the file (txt, images etc)
MEDIA_ROOT = "media/"

# set the storage system
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# set the test mode
TESTING_MODE = (" ".join(sys.argv)).find("manage.py test") != -1
if TESTING_MODE:
    DEFAULT_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"

# set the aws s3 bucket and region
AWS_STORAGE_BUCKET_NAME = "django-twitter-lu"
AWS_S3_REGION_NAME = "ap-northeast-1"

# ref: https://docs.djangoproject.com/en/3.1/topics/cache/
# DON'T use the pip install memcache or pip install django-memcached
# USE pip install python-memcache
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.memcached.MemcachedCache",
        "LOCATION": "cache:11211",
        "TIMEOUT": 86400,  # TTL time to live
    },
    "testing": {
        "BACKEND": "django.core.cache.backends.memcached.MemcachedCache",
        "LOCATION": "cache:11211",
        "TIMEOUT": 86400,
        "KEY_PREFIX": "testing",
    },
}

# Install the Redis
# add the line into the Dockerfile: apt-get install redis
# add the redis python in requirement, pip install redis
REDIS_HOST = "redis"
REDIS_PORT = 6379
REDIS_DB = 0 if TESTING_MODE else 1
REDIS_KEY_EXPIRE_TIME = 7 * 86400  # in seconds
# size of limit should be larger than the pagination size
REDIS_LIST_LENGTH_LIMIT = 200 if not TESTING_MODE else 20

try:
    from .local_settings import *
except:
    pass
